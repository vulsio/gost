name: Fetch Test

on:
  pull_request:
  schedule:
  - cron: '0 0 * * *'

jobs:
  fetch-debian:
    name: fetch-debian
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype sqlite3 debian
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" debian
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" debian
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" debian

  fetch-ubuntu:
    name: fetch-ubuntu
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype sqlite3 ubuntu
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" ubuntu
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" ubuntu
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" ubuntu

  fetch-redhat:
    name: fetch-redhat
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype sqlite3 redhat
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" redhat
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" redhat
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" redhat

  fetch-microsoft:
    name: fetch-microsoft
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype sqlite3 microsoft
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" microsoft
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" microsoft
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./gost fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" microsoft
